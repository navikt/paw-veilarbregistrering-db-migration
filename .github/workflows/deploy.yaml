name: Build, push, deploy ðŸ’ª

on:
  push:
    branches:
      - main

env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/db-migration-paw

jobs:

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1

      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

      - name: Set up Maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 12
        uses: actions/setup-java@v1
        with:
          java-version: 12

      - name: Build with Maven
        run: mvn -Pgithub -B package --settings maven-settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}

  deploy-dev:
    name: Deploy to dev GCP
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

      - name: Deploy to Dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_KEY }}
          CLUSTER: dev-gcp
          DRY_RUN: false
          RESOURCE: .nais/nais-dev.yaml

#  deploy-prod:
#    name: Deploy to prod-fss
#    needs: deploy-dev
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Lag tag for image
#        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
#
#      - name: Lag full image referanse
#        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV
#
#      - name: Deploy to production
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_KE
  Y }}
#          CLUSTER: prod-fss
#          DRY_RUN: false
#          RESOURCE: nais/nais-prod.yaml

#  release:
#    name: Tag and release
#    needs: deploy-prod
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#        name: Checkout
#
#      - name: Lag tag for release
#        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
#
#      - name: Create release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: release/prod@${{ env.TAG }}
#          release_name: Release to prod
#          prerelease: false
